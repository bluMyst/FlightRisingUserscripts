// Generated by CoffeeScript 1.9.3
var FormData, GEMS, TREASURE, browseAllBackup, form,
  slice = [].slice;

TREASURE = 0;

GEMS = 1;

FormData = (function() {
  function FormData(form1) {
    this.form = form1;
  }

  FormData.prototype.field = function(name, newValue) {
    var field;
    field = this.form.find("[name=" + name + "]");
    if (newValue) {
      return field.val(newValue);
    } else {
      return field.val();
    }
  };

  return FormData;

})();

form = new FormData(findMatches('form#searching', 1, 1));

browseAllBackup = window.browseAll = function() {
  var args, cat, filledFields, gh, ghl, gl, gll, i, j, k, len, name, postData, ref, ref1, th, thl, tl, tll;
  args = 1 <= arguments.length ? slice.call(arguments, 0) : [];
  console.log.apply(console, ['browseAll called with'].concat(slice.call(args)));
  postData = {};
  postData.tab = args[0], postData.page = args[1], j = args.length - 2, postData.ordering = args[j++], postData.direct = args[j++];
  postData.page = $('#ah_left > div > img[src*="/images/layout/arrow_left"] ~ span').text();
  if ((cat = form.field('cat')).length) {
    postData.cat = cat;
  } else if ((name = form.field('name')).length) {
    postData.name = name;
  }
  tl = form.field('tl');
  th = form.field('th');
  gl = form.field('gl');
  gh = form.field('gh');
  ref = [tl.length, th.length, gl.length, gh.length], tll = ref[0], thl = ref[1], gll = ref[2], ghl = ref[3];
  filledFields = 0;
  ref1 = [tll, thl, gll, ghl];
  for (k = 0, len = ref1.length; k < len; k++) {
    i = ref1[k];
    if (i) {
      filledFields += 1;
    }
  }
  if (tll || thl) {
    if (tll) {
      postData.tl = tl;
    }
    if (thl) {
      postData.th = th;
    }
  } else if (gll || ghl) {
    if (gll) {
      postData.gl = gl;
    }
    if (ghl) {
      postData.gh = gh;
    }
  }
  console.log('Posting', postData);
  return $.ajax({
    type: "POST",
    data: postData,
    url: "includes/ah_buy_" + postData.tab + ".php",
    cache: false
  }).done(function(stuff) {
    return findMatches("#ah_left", 1, 1).html(stuff);

    /*
    setTimeout((->
        window.browseAll = browseAllBackup
    ), 20)
     */
  });
};


/*
button = findMatches('input#go', 1, 1)
button.click(->
    browseAllBackup
)
 */
