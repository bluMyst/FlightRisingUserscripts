// Generated by CoffeeScript 1.4.0

/*
// ==UserScript==
// @name        Flight Rising HiLo
// @namespace   ahto
// @include     http://flightrising.com/main.php*p=hilo*
// @version     1.0
// @grant       none
// ==/UserScript==
*/


(function() {
  var canvas, cards, ctx, delayClick, hi, imageLoop, leftCard, lo, playAgain, randInt, setRandomTimeout, timeRemaining, _ref;

  console.log("Flight Rising HiLo loaded.");

  String.prototype.hashCode = function() {
    var chr, hash, i, _i, _len;
    hash = 0;
    for (_i = 0, _len = this.length; _i < _len; _i++) {
      i = this[_i];
      chr = i.charCodeAt(0);
      hash = ((hash << 5) - hash) + chr;
      hash |= 0;
    }
    return hash;
  };

  randInt = function(min, max) {
    return min + Math.floor(Math.random() * (max + 1 - min));
  };

  setRandomTimeout = function(f, min, max) {
    return setTimeout(f, randInt(min, max));
  };

  delayClick = function(target) {
    return setRandomTimeout((function() {
      return target.click();
    }), 500, 1500);
  };

  cards = {
    1: void 0,
    2: 1892593725,
    3: 745232701,
    4: 343619172,
    5: -932029944,
    6: 1865291602,
    7: -1248784561,
    8: 781610367,
    9: 1741550947,
    10: -974252486,
    11: 376369066,
    12: -1855727273,
    13: void 0
  };

  playAgain = $('.mb_button')[0];

  if (playAgain !== void 0) {
    console.log('Play again button detected; clicking.');
    delayClick(playAgain);
    return;
  }

  timeRemaining = $('#super-container > div:nth-child(3) > div:nth-child(1) > span:nth-child(2)')[0];

  if (timeRemaining !== void 0) {
    console.log("Out of guesses.");
    timeRemaining = timeRemaining.innerHTML.match(/(\d+) minutes/)[1];
    console.log("Detected time remaining of " + timeRemaining + " minutes.");
    timeRemaining++;
    timeRemaining = Math.floor(timeRemaining * 1000 * 60);
    setRandomTimeout((function() {
      return alert("Reload the page to play HiLo again.");
    }), timeRemaining, timeRemaining + 5000);
  }

  canvas = document.createElement('canvas');

  leftCard = $('#super-container > div:nth-child(3) > img:nth-child(1)')[0];

  lo = $('#super-container > div:nth-child(3) > div:nth-child(4) > map:nth-child(3) > area:nth-child(1)')[0];

  hi = $('#super-container > div:nth-child(3) > div:nth-child(4) > map:nth-child(3) > area:nth-child(2)')[0];

  _ref = [leftCard.width, leftCard.height], canvas.width = _ref[0], canvas.height = _ref[1];

  console.log("Canvas width x height: " + canvas.width + "x" + canvas.height);

  $('.main')[0].appendChild(canvas);

  ctx = canvas.getContext('2d');

  imageLoop = function(loops) {
    var DELAY, MAX_LOOPS, cardNum, hash, referenceCardNum, referenceHash;
    if (loops === void 0) {
      loops = 0;
    }
    ctx.drawImage(leftCard, 0, 0);
    hash = canvas.toDataURL("image/png").hashCode();
    for (referenceCardNum in cards) {
      referenceHash = cards[referenceCardNum];
      if (hash === referenceHash) {
        cardNum = referenceCardNum;
        console.log("Card identified as " + cardNum);
        break;
      }
    }
    if (cardNum !== void 0) {
      if (cardNum > 13 / 2) {
        console.log('Clicking lo button.');
        return delayClick(lo);
      } else {
        console.log('Clicking hi button.');
        return delayClick(hi);
      }
    } else {
      DELAY = 2000;
      MAX_LOOPS = 10;
      console.log("Failed to identify card with hash: " + hash);
      if (loops < MAX_LOOPS) {
        console.log("[" + (loops + 1) + "/" + MAX_LOOPS + "] Looping in " + DELAY + " ms...");
        setTimeout((function() {
          return imageLoop(loops + 1);
        }), DELAY);
      } else {
        console.log("Max tries exceeded. Giving up and alerting the user.");
        return alert("Failed to identify card with hash: " + hash);
      }
    }
  };

  imageLoop();

}).call(this);
